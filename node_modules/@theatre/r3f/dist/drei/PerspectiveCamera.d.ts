import * as React from 'react';
import type { Object3D } from 'three';
import { Vector3 } from 'three';
import type { MutableRefObject } from 'react';
export type PerspectiveCameraProps = Omit<JSX.IntrinsicElements['perspectiveCamera'], 'lookAt'> & {
    lookAt?: [number, number, number] | Vector3 | MutableRefObject<Object3D | null | undefined>;
    makeDefault?: boolean;
    manual?: boolean;
    children?: React.ReactNode;
};
export declare const PerspectiveCamera: React.ForwardRefExoticComponent<Omit<Omit<Omit<PerspectiveCameraProps, "ref"> & React.RefAttributes<unknown>, "visible"> & {
    theatreKey: string;
    visible?: boolean | "editor" | undefined;
    additionalProps?: any;
    objRef?: any;
} & React.RefAttributes<import("@react-three/fiber").PerspectiveCameraProps>, "ref"> & React.RefAttributes<unknown>>;
//# sourceMappingURL=PerspectiveCamera.d.ts.map