{
  "version": 3,
  "sources": ["../../../node_modules/zustand/vanilla.js", "../src/main/editable.tsx", "../src/main/store.ts", "../../../node_modules/react-merge-refs/src/index.tsx", "../src/main/useInvalidate.ts", "../src/main/SheetProvider.tsx", "../src/main/editableFactoryConfigUtils.ts", "../src/main/defaultEditableFactoryConfig.ts", "../src/main/utils.ts", "../src/main/RafDriverProvider.tsx", "../src/main/RefreshSnapshot.tsx", "../src/drei/PerspectiveCamera.tsx", "../src/drei/OrthographicCamera.tsx"],
  "sourcesContent": ["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction create(createState) {\n  var state;\n  var listeners = new Set();\n\n  var setState = function setState(partial, replace) {\n    var nextState = typeof partial === 'function' ? partial(state) : partial;\n\n    if (nextState !== state) {\n      var _previousState = state;\n      state = replace ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach(function (listener) {\n        return listener(state, _previousState);\n      });\n    }\n  };\n\n  var getState = function getState() {\n    return state;\n  };\n\n  var subscribeWithSelector = function subscribeWithSelector(listener, selector, equalityFn) {\n    if (selector === void 0) {\n      selector = getState;\n    }\n\n    if (equalityFn === void 0) {\n      equalityFn = Object.is;\n    }\n\n    var currentSlice = selector(state);\n\n    function listenerToAdd() {\n      var nextSlice = selector(state);\n\n      if (!equalityFn(currentSlice, nextSlice)) {\n        var _previousSlice = currentSlice;\n        listener(currentSlice = nextSlice, _previousSlice);\n      }\n    }\n\n    listeners.add(listenerToAdd);\n    return function () {\n      return listeners.delete(listenerToAdd);\n    };\n  };\n\n  var subscribe = function subscribe(listener, selector, equalityFn) {\n    if (selector || equalityFn) {\n      return subscribeWithSelector(listener, selector, equalityFn);\n    }\n\n    listeners.add(listener);\n    return function () {\n      return listeners.delete(listener);\n    };\n  };\n\n  var destroy = function destroy() {\n    return listeners.clear();\n  };\n\n  var api = {\n    setState: setState,\n    getState: getState,\n    subscribe: subscribe,\n    destroy: destroy\n  };\n  state = createState(setState, getState, api);\n  return api;\n}\n\nexports.default = create;\n", "import type {ComponentProps, ComponentType, Ref, RefAttributes} from 'react'\nimport {useMemo, useState} from 'react'\nimport React, {forwardRef, useEffect, useLayoutEffect, useRef} from 'react'\nimport {allRegisteredObjects, editorStore} from './store'\nimport {mergeRefs} from 'react-merge-refs'\nimport useInvalidate from './useInvalidate'\nimport {useCurrentSheet} from './SheetProvider'\nimport defaultEditableFactoryConfig from './defaultEditableFactoryConfig'\nimport type {EditableFactoryConfig} from './editableFactoryConfigUtils'\nimport {makeStoreKey} from './utils'\nimport type {$FixMe, $IntentionalAny} from '../types'\nimport type {ISheetObject} from '@theatre/core'\nimport {notify} from '@theatre/core'\nimport {useCurrentRafDriver} from './RafDriverProvider'\n\nconst createEditable = <Keys extends keyof JSX.IntrinsicElements>(\n  config: EditableFactoryConfig,\n) => {\n  const editable = <\n    T extends ComponentType<any> | keyof JSX.IntrinsicElements | 'primitive',\n    U extends Keys,\n  >(\n    Component: T,\n    type: T extends 'primitive' ? null : U,\n  ) => {\n    type Props = Omit<ComponentProps<T>, 'visible'> & {\n      theatreKey: string\n      visible?: boolean | 'editor'\n      additionalProps?: $FixMe\n      objRef?: $FixMe\n    } & (T extends 'primitive'\n        ? {\n            editableType: U\n          }\n        : {}) &\n      RefAttributes<JSX.IntrinsicElements[U]>\n\n    if (Component !== 'primitive' && !type) {\n      throw new Error(\n        `You must provide the type of the component you're creating an editable for. For example: editable(MyComponent, 'mesh').`,\n      )\n    }\n\n    // TODO: detect if `editable()` is being called in the body of a react component, which is a common\n    // mistake. If it is, throw an error.\n\n    return forwardRef(\n      (\n        {\n          theatreKey,\n          visible,\n          editableType,\n          additionalProps,\n          objRef,\n          ...props\n        }: Props,\n        ref,\n      ) => {\n        //region Runtime type checks\n        if (typeof theatreKey !== 'string') {\n          throw new Error(\n            `No valid theatreKey was provided to the editable component. theatreKey must be a string. Received: ${theatreKey}`,\n          )\n        }\n\n        if (Component === 'primitive' && !editableType) {\n          throw new Error(\n            `When using the primitive component, you must provide the editableType prop. Received: ${editableType}`,\n          )\n        }\n        //endregion\n\n        const actualType = type ?? editableType\n\n        const objectRef = useRef<JSX.IntrinsicElements[U]>()\n\n        const sheet = useCurrentSheet()!\n        const rafDriver = useCurrentRafDriver()\n\n        const [sheetObject, setSheetObject] = useState<\n          undefined | ISheetObject<$FixMe>\n        >(undefined)\n\n        const storeKey = useMemo(\n          () =>\n            makeStoreKey({\n              ...sheet.address,\n              objectKey: theatreKey as $IntentionalAny,\n            }),\n          [sheet, theatreKey],\n        )\n\n        const invalidate = useInvalidate()\n\n        // warn about cameras in r3f\n        useEffect(() => {\n          if (\n            Component === 'perspectiveCamera' ||\n            Component === 'orthographicCamera'\n          ) {\n            const dreiComponent =\n              Component.charAt(0).toUpperCase() + Component.slice(1)\n\n            notify.warning(\n              `Possibly incorrect use of <e.${Component} />`,\n              `You seem to have declared the camera \"${theatreKey}\" simply as \\`<e.${Component} ... />\\`. This alone won't make r3f use it for rendering.\n\nThe easiest way to create a custom animatable \\`${dreiComponent}\\` is to import it from \\`@react-three/drei\\`, and make it editable.\n\\`\\`\\`\nimport {${dreiComponent}} from '@react-three/drei'\n\nconst EditableCamera =\n  editable(${dreiComponent}, '${Component}')\n\\`\\`\\`\nThen you can use it in your JSX like any other editable component. Note the makeDefault prop exposed by drei, which makes r3f use it for rendering.\n\\`\\`\\`\n<EditableCamera\n  theatreKey=\"${theatreKey}\"\n  makeDefault\n>\n\\`\\`\\`\n`,\n            )\n          }\n        }, [Component, theatreKey])\n\n        // create sheet object and add editable to store\n        useLayoutEffect(() => {\n          if (!sheet) return\n          if (sheetObject) {\n            sheet.object(\n              theatreKey,\n              Object.assign(\n                {\n                  ...additionalProps,\n                },\n                // @ts-ignore\n                ...Object.values(config[actualType].props).map(\n                  // @ts-ignore\n                  (value) => value.type,\n                ),\n              ),\n              {reconfigure: true},\n            )\n            return\n          } else {\n            const sheetObject = sheet.object(\n              theatreKey,\n              Object.assign(\n                {\n                  ...additionalProps,\n                },\n                // @ts-ignore\n                ...Object.values(config[actualType].props).map(\n                  // @ts-ignore\n                  (value) => value.type,\n                ),\n              ),\n            )\n            allRegisteredObjects.add(sheetObject)\n            setSheetObject(sheetObject)\n\n            if (objRef)\n              typeof objRef === 'function'\n                ? objRef(sheetObject)\n                : (objRef.current = sheetObject)\n\n            editorStore.getState().addEditable(storeKey, {\n              type: actualType,\n              sheetObject,\n              visibleOnlyInEditor: visible === 'editor',\n              // @ts-ignore\n              objectConfig: config[actualType],\n            })\n          }\n        }, [sheet, storeKey, additionalProps])\n\n        // store initial values of props\n        useLayoutEffect(() => {\n          if (!sheetObject) return\n          sheetObject!.initialValue = Object.fromEntries(\n            // @ts-ignore\n            Object.entries(config[actualType].props).map(\n              // @ts-ignore\n              ([key, value]) => [key, value.parse(props)],\n            ),\n          )\n        }, [\n          sheetObject,\n          // @ts-ignore\n          ...Object.keys(config[actualType].props).map(\n            // @ts-ignore\n            (key) => props[key],\n          ),\n        ])\n\n        // subscribe to prop changes from theatre\n        useLayoutEffect(() => {\n          if (!sheetObject) return\n\n          const object = objectRef.current!\n\n          const setFromTheatre = (newValues: any) => {\n            // @ts-ignore\n            Object.entries(config[actualType].props).forEach(\n              // @ts-ignore\n              ([key, value]) => value.apply(newValues[key], object),\n            )\n            // @ts-ignore\n            config[actualType].updateObject?.(object)\n            invalidate()\n          }\n\n          setFromTheatre(sheetObject.value)\n\n          const unsubscribe = sheetObject.onValuesChange(\n            setFromTheatre,\n            rafDriver,\n          )\n\n          return () => {\n            unsubscribe()\n            sheetObject.sheet.detachObject(theatreKey)\n            allRegisteredObjects.delete(sheetObject)\n            editorStore.getState().removeEditable(storeKey)\n          }\n        }, [sheetObject, rafDriver])\n\n        return (\n          // @ts-ignore\n          <Component\n            ref={mergeRefs([objectRef, ref])}\n            {...props}\n            visible={visible !== 'editor' && visible}\n            userData={{\n              __editable: true,\n              __storeKey: storeKey,\n            }}\n          />\n        )\n      },\n    )\n  }\n\n  const extensions = {\n    ...Object.fromEntries(\n      Object.keys(config).map((key) => [\n        key,\n        // @ts-ignore\n        editable(key, key),\n      ]),\n    ),\n    primitive: editable('primitive', null),\n  } as unknown as {\n    [Property in Keys]: React.ForwardRefExoticComponent<\n      Omit<JSX.IntrinsicElements[Property], 'visible'> & {\n        theatreKey: string\n        visible?: boolean | 'editor'\n        additionalProps?: $FixMe\n        objRef?: $FixMe\n        // not exactly sure how to get the type of the threejs object itself\n        ref?: Ref<unknown>\n      }\n    >\n  } & {\n    primitive: React.ForwardRefExoticComponent<\n      {\n        object: any\n        theatreKey: string\n        visible?: boolean | 'editor'\n        additionalProps?: $FixMe\n        objRef?: $FixMe\n        editableType: keyof JSX.IntrinsicElements\n        // not exactly sure how to get the type of the threejs object itself\n        ref?: Ref<unknown>\n      } & {\n        // Have to reproduce the primitive component's props here because we need to\n        // lift this index type here to the outside to make auto-complete work\n        [props: string]: any\n      }\n    >\n  }\n\n  return Object.assign(editable, extensions)\n}\n\nconst editable = createEditable<keyof typeof defaultEditableFactoryConfig>(\n  defaultEditableFactoryConfig,\n)\n\nexport default editable\n", "import type {StateCreator} from 'zustand'\nimport create from 'zustand/vanilla'\nimport type {Object3D, Scene, WebGLRenderer} from 'three'\nimport {Group} from 'three'\nimport type {ISheetObject} from '@theatre/core'\nimport type {ObjectConfig} from './editableFactoryConfigUtils'\n\nexport type TransformControlsMode = 'translate' | 'rotate' | 'scale'\nexport type TransformControlsSpace = 'world' | 'local'\nexport type ViewportShading = 'wireframe' | 'flat' | 'solid' | 'rendered'\n\nexport type BaseSheetObjectType = ISheetObject<any>\n\nexport const allRegisteredObjects = new WeakSet<BaseSheetObjectType>()\n\nexport interface Editable<T> {\n  type: string\n  sheetObject: ISheetObject<any>\n  objectConfig: ObjectConfig<T>\n  visibleOnlyInEditor: boolean\n}\n\nexport type EditableSnapshot<T extends Editable<any> = Editable<any>> = {\n  proxyObject?: Object3D | null\n} & T\n\nexport interface SerializedEditable {\n  type: string\n}\n\nexport interface EditableState {\n  editables: Record<string, SerializedEditable>\n}\n\nexport type EditorStore = {\n  scene: Scene | null\n  gl: WebGLRenderer | null\n  helpersRoot: Group\n  editables: Record<string, Editable<any>>\n  // this will come in handy when we start supporting multiple canvases\n  canvasName: string\n  sceneSnapshot: Scene | null\n  editablesSnapshot: Record<string, EditableSnapshot> | null\n\n  init: (scene: Scene, gl: WebGLRenderer) => void\n\n  addEditable: (theatreKey: string, editable: Editable<any>) => void\n  removeEditable: (theatreKey: string) => void\n  createSnapshot: () => void\n  setSnapshotProxyObject: (\n    proxyObject: Object3D | null,\n    theatreKey: string,\n  ) => void\n}\n\nconst config: StateCreator<EditorStore> = (set, get) => {\n  return {\n    sheet: null,\n    editorObject: null,\n    scene: null,\n    gl: null,\n    helpersRoot: new Group(),\n    editables: {},\n    canvasName: 'default',\n    sceneSnapshot: null,\n    editablesSnapshot: null,\n    initialEditorCamera: {},\n\n    init: (scene, gl) => {\n      set({\n        scene,\n        gl,\n      })\n\n      // Create a snapshot, so that if the editor is already open, it gets refreshed\n      // when the scene is initialized\n      get().createSnapshot()\n    },\n\n    addEditable: (theatreKey, editable) => {\n      set((state) => ({\n        editables: {\n          ...state.editables,\n          [theatreKey]: editable,\n        },\n      }))\n    },\n\n    removeEditable: (theatreKey) => {\n      set((state) => {\n        const editables = {...state.editables}\n        delete editables[theatreKey]\n        return {\n          editables,\n        }\n      })\n    },\n\n    createSnapshot: () => {\n      set((state) => ({\n        sceneSnapshot: state.scene?.clone() ?? null,\n        editablesSnapshot: state.editables,\n      }))\n    },\n\n    setSnapshotProxyObject: (proxyObject, theatreKey) => {\n      set((state) => ({\n        editablesSnapshot: {\n          ...state.editablesSnapshot,\n          [theatreKey]: {\n            ...state.editablesSnapshot![theatreKey],\n            proxyObject,\n          },\n        },\n      }))\n    },\n  }\n}\n\nexport const editorStore = create<EditorStore>(config)\n\nexport type BindFunction = (options: {\n  allowImplicitInstancing?: boolean\n  gl: WebGLRenderer\n  scene: Scene\n}) => void\n\nexport const bindToCanvas: BindFunction = ({gl, scene}) => {\n  const init = editorStore.getState().init\n  init(scene, gl)\n}\n", "import type * as React from \"react\";\n\nexport function mergeRefs<T = any>(\n  refs: Array<React.MutableRefObject<T> | React.LegacyRef<T>>\n): React.RefCallback<T> {\n  return (value) => {\n    refs.forEach((ref) => {\n      if (typeof ref === \"function\") {\n        ref(value);\n      } else if (ref != null) {\n        (ref as React.MutableRefObject<T | null>).current = value;\n      }\n    });\n  };\n}\n", "import {useThree} from '@react-three/fiber'\n\nexport default function useInvalidate() {\n  return useThree(({invalidate}) => invalidate)\n}\n", "import type {ReactNode} from 'react'\nimport React, {\n  createContext,\n  useContext,\n  useEffect,\n  useLayoutEffect,\n} from 'react'\nimport {useThree} from '@react-three/fiber'\nimport type {ISheet} from '@theatre/core'\nimport {bindToCanvas} from './store'\n\nconst ctx = createContext<{sheet: ISheet}>(undefined!)\n\nconst useWrapperContext = (): {sheet: ISheet} => {\n  const val = useContext(ctx)\n  if (!val) {\n    throw new Error(\n      `No sheet found. You need to add a <SheetProvider> higher up in the tree. https://docs.theatrejs.com/r3f.html#sheetprovider`,\n    )\n  }\n  return val\n}\n\nexport const useCurrentSheet = (): ISheet | undefined => {\n  return useWrapperContext().sheet\n}\n\nconst SheetProvider: React.FC<{\n  sheet: ISheet\n  children: ReactNode\n}> = ({sheet, children}) => {\n  const {scene, gl} = useThree((s) => ({scene: s.scene, gl: s.gl}))\n\n  useEffect(() => {\n    if (!sheet || sheet.type !== 'Theatre_Sheet_PublicAPI') {\n      throw new Error(`sheet in <Wrapper sheet={sheet}> has an invalid value`)\n    }\n  }, [sheet])\n\n  useLayoutEffect(() => {\n    bindToCanvas({gl, scene})\n  }, [scene, gl])\n\n  return <ctx.Provider value={{sheet}}>{children}</ctx.Provider>\n}\n\nexport default SheetProvider\n", "import type {UnknownShorthandCompoundProps} from '@theatre/core'\nimport {notify} from '@theatre/core'\nimport {types} from '@theatre/core'\nimport type {Object3D} from 'three'\nimport type {IconID} from '../extension/icons'\nimport {Color} from 'three'\n\nexport type Helper = Object3D & {\n  update?: () => void\n}\ntype PropConfig<T> = {\n  parse: (props: Record<string, any>) => T\n  apply: (value: T, object: any) => void\n  type: UnknownShorthandCompoundProps\n}\ntype Props = Record<string, PropConfig<any>>\ntype Meta<T> = {\n  useTransformControls: boolean\n  updateObject?: (object: T) => void\n  icon: IconID\n  dimensionless?: boolean\n  createHelper?: (object: T) => Helper\n}\nexport type ObjectConfig<T> = {props: Props} & Meta<T>\nexport type EditableFactoryConfig = Partial<\n  Record<keyof JSX.IntrinsicElements, ObjectConfig<any>>\n>\n\ntype Vector3 = {\n  x: number\n  y: number\n  z: number\n}\n\nfunction isNumber(value: any) {\n  return typeof value === 'number' && isFinite(value)\n}\n\nfunction isVectorObject(value: any) {\n  return (['x', 'y', 'z'] as const).every((axis) => isNumber(value[axis]))\n}\n\nexport const createVector = (components?: [number, number, number]) => {\n  return components\n    ? {x: components[0], y: components[1], z: components[2]}\n    : {\n        x: 0,\n        y: 0,\n        z: 0,\n      }\n}\n\nexport const createVectorPropConfig = (\n  key: string,\n  defaultValue = createVector(),\n  {nudgeMultiplier = 0.01} = {},\n): PropConfig<Vector3> => ({\n  parse: (props) => {\n    const propValue = props[key]\n    // if prop exists\n    const vector = !propValue\n      ? defaultValue\n      : // if prop is an array\n      Array.isArray(propValue)\n      ? createVector(propValue as any)\n      : // if prop is a scalar\n      isNumber(propValue)\n      ? {\n          x: propValue,\n          y: propValue,\n          z: propValue,\n        }\n      : // if prop is a threejs Vector3\n      isVectorObject(propValue)\n      ? {\n          x: propValue.x,\n          y: propValue.y,\n          z: propValue.z,\n        }\n      : // show a warning and return defaultValue\n        (notify.warning(\n          `Invalid value for vector prop \"${key}\"`,\n          `Couldn't make sense of \\`${key}={${JSON.stringify(\n            propValue,\n          )}}\\`, falling back to \\`${key}={${JSON.stringify([\n            defaultValue.x,\n            defaultValue.y,\n            defaultValue.z,\n          ])}}\\`.\n\nTo fix this, make sure the prop is set to either a number, an array of numbers, or a three.js Vector3 object.`,\n        ),\n        defaultValue)\n    ;(['x', 'y', 'z'] as const).forEach((axis) => {\n      // e.g. r3f also accepts prop keys like \"scale-x\"\n      if (props[`${key}-${axis}` as any])\n        vector[axis] = props[`${key}-${axis}` as any]\n    })\n    return vector\n  },\n  apply: (value, object) => {\n    object[key].set(value.x, value.y, value.z)\n  },\n  type: {\n    [key]: {\n      x: types.number(defaultValue.x, {nudgeMultiplier}),\n      y: types.number(defaultValue.y, {nudgeMultiplier}),\n      z: types.number(defaultValue.z, {nudgeMultiplier}),\n    },\n  },\n})\n\nexport const createNumberPropConfig = (\n  key: string,\n  defaultValue: number = 0,\n  {nudgeMultiplier = 0.01} = {},\n): PropConfig<number> => ({\n  parse: (props) => {\n    return props[key] ?? defaultValue\n  },\n  apply: (value, object) => {\n    object[key] = value\n  },\n  type: {\n    [key]: types.number(defaultValue, {nudgeMultiplier}),\n  },\n})\n\nexport type Rgba = {\n  r: number\n  g: number\n  b: number\n  a: number\n}\n\nexport const createColorPropConfig = (\n  key: string,\n  defaultValue = new Color(0, 0, 0),\n): PropConfig<Rgba> => ({\n  parse: (props) => {\n    return {...(props[key] ?? defaultValue), a: 1}\n  },\n  apply: (value, object) => {\n    object[key].setRGB(value.r, value.g, value.b)\n  },\n  type: {\n    [key]: types.rgba({...defaultValue, a: 1}),\n  },\n})\n\nexport const extendObjectProps = <T extends {props: {}}>(\n  objectConfig: T,\n  extension: Props,\n) => ({\n  ...objectConfig,\n  props: {...objectConfig.props, ...extension},\n})\n", "import type {EditableFactoryConfig} from './editableFactoryConfigUtils'\nimport {\n  createColorPropConfig,\n  createNumberPropConfig,\n  createVector,\n  createVectorPropConfig,\n  extendObjectProps,\n} from './editableFactoryConfigUtils'\nimport type {\n  DirectionalLight,\n  Object3D,\n  OrthographicCamera,\n  PerspectiveCamera,\n  PointLight,\n  SpotLight,\n} from 'three'\nimport {\n  BoxHelper,\n  CameraHelper,\n  Color,\n  DirectionalLightHelper,\n  PointLightHelper,\n  SpotLightHelper,\n} from 'three'\n\nconst baseObjectConfig = {\n  props: {\n    position: createVectorPropConfig('position'),\n    rotation: createVectorPropConfig('rotation'),\n    scale: createVectorPropConfig('scale', createVector([1, 1, 1])),\n  },\n  useTransformControls: true,\n  icon: 'cube' as const,\n  createHelper: (object: Object3D) => new BoxHelper(object, selectionColor),\n}\n\nconst baseLightConfig = {\n  ...extendObjectProps(baseObjectConfig, {\n    intensity: createNumberPropConfig('intensity', 1),\n    distance: createNumberPropConfig('distance'),\n    decay: createNumberPropConfig('decay'),\n    color: createColorPropConfig('color', new Color('white')),\n  }),\n  dimensionless: true,\n}\n\nconst baseCameraConfig = {\n  ...extendObjectProps(baseObjectConfig, {\n    near: createNumberPropConfig('near', 0.1, {nudgeMultiplier: 0.1}),\n    far: createNumberPropConfig('far', 2000, {nudgeMultiplier: 0.1}),\n  }),\n  updateObject: (camera: PerspectiveCamera | OrthographicCamera) => {\n    camera.updateProjectionMatrix()\n  },\n  icon: 'camera' as const,\n  dimensionless: true,\n  createHelper: (camera: PerspectiveCamera) => new CameraHelper(camera),\n}\n\nconst selectionColor = '#40AAA4'\n\nconst defaultEditableFactoryConfig = {\n  group: {\n    ...baseObjectConfig,\n    icon: 'collection' as const,\n    createHelper: (object: Object3D) => new BoxHelper(object, selectionColor),\n  },\n  mesh: {\n    ...baseObjectConfig,\n    icon: 'cube' as const,\n    createHelper: (object: Object3D) => new BoxHelper(object, selectionColor),\n  },\n  spotLight: {\n    ...extendObjectProps(baseLightConfig, {\n      angle: createNumberPropConfig('angle', 0, {nudgeMultiplier: 0.001}),\n      penumbra: createNumberPropConfig('penumbra', 0, {nudgeMultiplier: 0.001}),\n    }),\n    icon: 'spotLight' as const,\n    createHelper: (light: SpotLight) =>\n      new SpotLightHelper(light, selectionColor),\n  },\n  directionalLight: {\n    ...extendObjectProps(baseObjectConfig, {\n      intensity: createNumberPropConfig('intensity', 1),\n      color: createColorPropConfig('color', new Color('white')),\n    }),\n    icon: 'sun' as const,\n    dimensionless: true,\n    createHelper: (light: DirectionalLight) =>\n      new DirectionalLightHelper(light, 1, selectionColor),\n  },\n  pointLight: {\n    ...baseLightConfig,\n    icon: 'lightBulb' as const,\n    createHelper: (light: PointLight) =>\n      new PointLightHelper(light, 1, selectionColor),\n  },\n  ambientLight: {\n    props: {\n      intensity: createNumberPropConfig('intensity', 1),\n      color: createColorPropConfig('color', new Color('white')),\n    },\n    useTransformControls: false,\n    icon: 'lightBulb' as const,\n  },\n  hemisphereLight: {\n    props: {\n      intensity: createNumberPropConfig('intensity', 1),\n      color: createColorPropConfig('color', new Color('white')),\n      groundColor: createColorPropConfig('groundColor', new Color('white')),\n    },\n    useTransformControls: false,\n    icon: 'lightBulb' as const,\n  },\n  perspectiveCamera: extendObjectProps(baseCameraConfig, {\n    fov: createNumberPropConfig('fov', 50, {nudgeMultiplier: 0.1}),\n    zoom: createNumberPropConfig('zoom', 1),\n  }),\n  orthographicCamera: baseCameraConfig,\n  points: baseObjectConfig,\n  line: baseObjectConfig,\n  lineLoop: baseObjectConfig,\n  lineSegments: baseObjectConfig,\n  fog: {\n    props: {\n      color: createColorPropConfig('color'),\n      near: createNumberPropConfig('near', 1, {nudgeMultiplier: 0.1}),\n      far: createNumberPropConfig('far', 1000, {nudgeMultiplier: 0.1}),\n    },\n    useTransformControls: false,\n    icon: 'cloud' as const,\n  },\n}\n\n// Assert that the config is indeed of EditableFactoryConfig without actually\n// forcing it to that type so that we can pass the real type to the editable factory\ndefaultEditableFactoryConfig as EditableFactoryConfig\n\nexport default defaultEditableFactoryConfig\n", "import {editorStore} from './store'\nimport type {ISheetObject} from '@theatre/core'\n\nexport const refreshSnapshot = editorStore.getState().createSnapshot\n\nexport const makeStoreKey = (sheetObjectAddress: ISheetObject['address']) =>\n  `${sheetObjectAddress.sheetId}:${sheetObjectAddress.sheetInstanceId}:${sheetObjectAddress.objectKey}`\n", "import type {ReactNode} from 'react'\nimport React, {createContext, useContext, useEffect} from 'react'\nimport type {IRafDriver} from '@theatre/core'\n\nconst ctx = createContext<{rafDriver: IRafDriver}>(undefined!)\n\nexport const useCurrentRafDriver = (): IRafDriver | undefined => {\n  return useContext(ctx)?.rafDriver\n}\n\nconst RafDriverProvider: React.FC<{\n  driver: IRafDriver\n  children: ReactNode\n}> = ({driver, children}) => {\n  useEffect(() => {\n    if (!driver || driver.type !== 'Theatre_RafDriver_PublicAPI') {\n      throw new Error(\n        `driver in <RafDriverProvider deriver={driver}> has an invalid value`,\n      )\n    }\n  }, [driver])\n\n  return <ctx.Provider value={{rafDriver: driver}}>{children}</ctx.Provider>\n}\n\nexport default RafDriverProvider\n", "import React, {useEffect} from 'react'\nimport {refreshSnapshot} from './utils'\n\n/**\n * Putting this element in a suspense tree makes sure the snapshot editor\n * gets refreshed once the tree renders.\n *\n * Alternatively you can use {@link refreshSnapshot}\n *\n * @example\n * Usage\n * ```jsx\n * <Suspense fallback={null}>\n *  <RefreshSnapshot />\n *  <Model url={sceneGLB} />\n * </Suspense>\n * ```\n */\nconst RefreshSnapshot: React.FC<{}> = () => {\n  useEffect(() => {\n    setTimeout(() => {\n      refreshSnapshot()\n    })\n  }, [])\n  return <></>\n}\n\nexport default RefreshSnapshot\n", "import * as React from 'react'\nimport type {PerspectiveCamera as PerspectiveCameraImpl, Object3D} from 'three'\nimport {useFrame, useThree} from '@react-three/fiber'\nimport {mergeRefs} from 'react-merge-refs'\nimport {editable} from '../index'\nimport {Vector3} from 'three'\nimport {editorStore} from '../main/store'\nimport type {MutableRefObject} from 'react'\n\nexport type PerspectiveCameraProps = Omit<\n  JSX.IntrinsicElements['perspectiveCamera'],\n  'lookAt'\n> & {\n  lookAt?:\n    | [number, number, number]\n    | Vector3\n    | MutableRefObject<Object3D | null | undefined>\n  makeDefault?: boolean\n  manual?: boolean\n  children?: React.ReactNode\n}\n\nexport const PerspectiveCamera = editable(\n  React.forwardRef(\n    ({makeDefault, lookAt, ...props}: PerspectiveCameraProps, ref) => {\n      const set = useThree(({set}) => set)\n      const camera = useThree(({camera}) => camera)\n      const size = useThree(({size}) => size)\n      const cameraRef = React.useRef<PerspectiveCameraImpl>(null!)\n\n      React.useLayoutEffect(() => {\n        if (!props.manual) {\n          cameraRef.current.aspect = size.width / size.height\n        }\n      }, [size, props])\n\n      React.useLayoutEffect(() => {\n        cameraRef.current.updateProjectionMatrix()\n      })\n\n      React.useLayoutEffect(() => {\n        if (makeDefault) {\n          const oldCam = camera\n          set(() => ({camera: cameraRef.current!}))\n          return () => set(() => ({camera: oldCam}))\n        }\n        // The camera should not be part of the dependency list because this components camera is a stable reference\n        // that must exchange the default, and clean up after itself on unmount.\n      }, [cameraRef, makeDefault, set])\n\n      useFrame(() => {\n        if (lookAt && cameraRef.current) {\n          cameraRef.current.lookAt(\n            Array.isArray(lookAt)\n              ? new Vector3(...lookAt)\n              : (lookAt as MutableRefObject<Object3D>).current\n              ? (lookAt as MutableRefObject<Object3D>).current.position\n              : (lookAt as Vector3),\n          )\n\n          // how could we make it possible for users to do something like this too?\n          const snapshot = editorStore.getState().editablesSnapshot\n          if (snapshot) {\n            snapshot[\n              cameraRef.current.userData.__storeKey\n            ].proxyObject?.rotation.copy(cameraRef.current.rotation)\n          }\n        }\n      })\n\n      return <perspectiveCamera ref={mergeRefs([cameraRef, ref])} {...props} />\n    },\n  ),\n  'perspectiveCamera',\n)\n", "import * as React from 'react'\nimport type {\n  OrthographicCamera as OrthographicCameraImpl,\n  Object3D,\n} from 'three'\nimport {useFrame, useThree} from '@react-three/fiber'\nimport {mergeRefs} from 'react-merge-refs'\nimport {editable} from '../index'\nimport {Vector3} from 'three'\nimport type {MutableRefObject} from 'react'\nimport {editorStore} from '../main/store'\n\nexport type OrthographicCameraProps = Omit<\n  JSX.IntrinsicElements['orthographicCamera'],\n  'lookAt'\n> & {\n  lookAt?:\n    | [number, number, number]\n    | Vector3\n    | MutableRefObject<Object3D | null | undefined>\n  makeDefault?: boolean\n  manual?: boolean\n  children?: React.ReactNode\n}\n\nexport const OrthographicCamera = editable(\n  React.forwardRef(\n    ({makeDefault, lookAt, ...props}: OrthographicCameraProps, ref) => {\n      const set = useThree(({set}) => set)\n      const camera = useThree(({camera}) => camera)\n      const size = useThree(({size}) => size)\n      const cameraRef = React.useRef<OrthographicCameraImpl>(null!)\n\n      React.useLayoutEffect(() => {\n        if (!props.manual) {\n          cameraRef.current.updateProjectionMatrix()\n        }\n      }, [size, props])\n\n      React.useLayoutEffect(() => {\n        cameraRef.current.updateProjectionMatrix()\n      })\n\n      React.useLayoutEffect(() => {\n        if (makeDefault) {\n          const oldCam = camera\n          set(() => ({camera: cameraRef.current!}))\n          return () => set(() => ({camera: oldCam}))\n        }\n        // The camera should not be part of the dependency list because this components camera is a stable reference\n        // that must exchange the default, and clean up after itself on unmount.\n      }, [cameraRef, makeDefault, set])\n\n      useFrame(() => {\n        if (lookAt && cameraRef.current) {\n          cameraRef.current.lookAt(\n            Array.isArray(lookAt)\n              ? new Vector3(...lookAt)\n              : (lookAt as MutableRefObject<Object3D>).current\n              ? (lookAt as MutableRefObject<Object3D>).current.position\n              : (lookAt as Vector3),\n          )\n\n          // how could we make it possible for users to do something like this too?\n          const snapshot = editorStore.getState().editablesSnapshot\n          if (snapshot) {\n            snapshot[\n              cameraRef.current.userData.__storeKey\n            ].proxyObject?.rotation.copy(cameraRef.current.rotation)\n          }\n        }\n      })\n\n      return (\n        <orthographicCamera\n          left={size.width / -2}\n          right={size.width / 2}\n          top={size.height / 2}\n          bottom={size.height / -2}\n          ref={mergeRefs([cameraRef, ref])}\n          {...props}\n        />\n      )\n    },\n  ),\n  'orthographicCamera',\n)\n"],
  "mappings": "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",
  "names": ["create", "setState", "getState", "subscribeWithSelector", "subscribe", "destroy", "React", "useEffect", "useLayoutEffect", "editable", "create", "useThree", "useThree", "Color", "Color", "notify", "React", "createContext", "useContext", "useEffect", "ctx", "config", "editable", "useEffect", "notify", "useLayoutEffect", "sheetObject", "_a", "_b", "React", "React", "useEffect", "useEffect", "React", "React", "useThree", "useThree", "set", "camera", "size", "_a", "React", "useFrame", "useThree", "Vector3", "useThree", "set", "camera", "size", "useFrame", "_a", "Vector3"]
}
